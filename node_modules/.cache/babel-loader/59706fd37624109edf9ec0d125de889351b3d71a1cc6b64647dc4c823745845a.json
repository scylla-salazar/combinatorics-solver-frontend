{"ast":null,"code":"// HamiltonianCycleComponent.jsx\nimport React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HamiltonianCycleComponent=()=>{const[matrix,setMatrix]=useState([[0,1,0],[1,0,1],[0,1,0]]);const handleChange=(rowIndex,colIndex,value)=>{const newMatrix=[...matrix];newMatrix[rowIndex][colIndex]=value;setMatrix(newMatrix);};const handleSubmit=async()=>{try{const response=await axios.post('https://combinatorics-solver.onrender.com/hamiltonian_cycle',{graph:matrix});console.log('Cycle:',response.data.cycle);}catch(error){console.error('Error solving Hamiltonian Cycle problem',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Hamiltonian Cycle Problem\"}),matrix.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{children:row.map((col,colIndex)=>/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:col,onChange:e=>handleChange(rowIndex,colIndex,parseInt(e.target.value))},colIndex))},rowIndex)),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Solve Hamiltonian Cycle\"})]});};export default HamiltonianCycleComponent;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","HamiltonianCycleComponent","matrix","setMatrix","handleChange","rowIndex","colIndex","value","newMatrix","handleSubmit","response","post","graph","console","log","data","cycle","error","children","map","row","col","type","onChange","e","parseInt","target","onClick"],"sources":["/combinatorics-solver/combinatorics-solver-frontend/src/components/HamiltonianCycleComponent.jsx"],"sourcesContent":["// HamiltonianCycleComponent.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst HamiltonianCycleComponent = () => {\n  const [matrix, setMatrix] = useState([[0, 1, 0], [1, 0, 1], [0, 1, 0]]);\n\n  const handleChange = (rowIndex, colIndex, value) => {\n    const newMatrix = [...matrix];\n    newMatrix[rowIndex][colIndex] = value;\n    setMatrix(newMatrix);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('https://combinatorics-solver.onrender.com/hamiltonian_cycle', { graph: matrix });\n      console.log('Cycle:', response.data.cycle);\n    } catch (error) {\n      console.error('Error solving Hamiltonian Cycle problem', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Hamiltonian Cycle Problem</h2>\n      {matrix.map((row, rowIndex) => (\n        <div key={rowIndex}>\n          {row.map((col, colIndex) => (\n            <input\n              key={colIndex}\n              type=\"number\"\n              value={col}\n              onChange={(e) => handleChange(rowIndex, colIndex, parseInt(e.target.value))}\n            />\n          ))}\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Solve Hamiltonian Cycle</button>\n    </div>\n  );\n};\n\nexport default HamiltonianCycleComponent;\n\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CACtC,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAEvE,KAAM,CAAAS,YAAY,CAAGA,CAACC,QAAQ,CAAEC,QAAQ,CAAEC,KAAK,GAAK,CAClD,KAAM,CAAAC,SAAS,CAAG,CAAC,GAAGN,MAAM,CAAC,CAC7BM,SAAS,CAACH,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAAGC,KAAK,CACrCJ,SAAS,CAACK,SAAS,CAAC,CACtB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,IAAI,CAAC,6DAA6D,CAAE,CAAEC,KAAK,CAAEV,MAAO,CAAC,CAAC,CACnHW,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC,CAC5C,CAAE,MAAOC,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,yCAAyC,CAAEA,KAAK,CAAC,CACjE,CACF,CAAC,CAED,mBACEjB,KAAA,QAAAkB,QAAA,eACEpB,IAAA,OAAAoB,QAAA,CAAI,2BAAyB,CAAI,CAAC,CACjChB,MAAM,CAACiB,GAAG,CAAC,CAACC,GAAG,CAAEf,QAAQ,gBACxBP,IAAA,QAAAoB,QAAA,CACGE,GAAG,CAACD,GAAG,CAAC,CAACE,GAAG,CAAEf,QAAQ,gBACrBR,IAAA,UAEEwB,IAAI,CAAC,QAAQ,CACbf,KAAK,CAAEc,GAAI,CACXE,QAAQ,CAAGC,CAAC,EAAKpB,YAAY,CAACC,QAAQ,CAAEC,QAAQ,CAAEmB,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACnB,KAAK,CAAC,CAAE,EAHvED,QAIN,CACF,CAAC,EARMD,QASL,CACN,CAAC,cACFP,IAAA,WAAQ6B,OAAO,CAAElB,YAAa,CAAAS,QAAA,CAAC,yBAAuB,CAAQ,CAAC,EAC5D,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}