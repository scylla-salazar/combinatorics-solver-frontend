{"ast":null,"code":"// TSPComponent.jsx\nimport React,{useState}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TSPComponent=()=>{const[cities,setCities]=useState([{x:'',y:''}]);const handleChange=(index,event)=>{const values=[...cities];values[index][event.target.name]=event.target.value;setCities(values);};const handleAddCity=()=>{setCities([...cities,{x:'',y:''}]);};const handleRemoveCity=index=>{const values=[...cities];values.splice(index,1);setCities(values);};const handleSubmit=async()=>{const formattedCities=cities.map(city=>[parseFloat(city.x),parseFloat(city.y)]);try{const response=await axios.post('https://combinatorics-solver.onrender.com/tsp',{cities:formattedCities});console.log('Best Route:',response.data.best_route);}catch(error){console.error('Error solving TSP',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Traveling Salesman Problem\"}),cities.map((city,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"x\",placeholder:\"X-coordinate\",value:city.x,onChange:event=>handleChange(index,event)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"y\",placeholder:\"Y-coordinate\",value:city.y,onChange:event=>handleChange(index,event)}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveCity(index),children:\"Remove City\"})]},index)),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddCity,children:\"Add City\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,children:\"Solve TSP\"})]});};export default TSPComponent;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","TSPComponent","cities","setCities","x","y","handleChange","index","event","values","target","name","value","handleAddCity","handleRemoveCity","splice","handleSubmit","formattedCities","map","city","parseFloat","response","post","console","log","data","best_route","error","children","type","placeholder","onChange","onClick"],"sources":["/combinatorics-solver/combinatorics-solver-frontend/src/components/TSPComponent.jsx"],"sourcesContent":["// TSPComponent.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst TSPComponent = () => {\n  const [cities, setCities] = useState([{ x: '', y: '' }]);\n\n  const handleChange = (index, event) => {\n    const values = [...cities];\n    values[index][event.target.name] = event.target.value;\n    setCities(values);\n  };\n\n  const handleAddCity = () => {\n    setCities([...cities, { x: '', y: '' }]);\n  };\n\n  const handleRemoveCity = (index) => {\n    const values = [...cities];\n    values.splice(index, 1);\n    setCities(values);\n  };\n\n  const handleSubmit = async () => {\n    const formattedCities = cities.map(city => [parseFloat(city.x), parseFloat(city.y)]);\n    try {\n      const response = await axios.post('https://combinatorics-solver.onrender.com/tsp', { cities: formattedCities });\n      console.log('Best Route:', response.data.best_route);\n    } catch (error) {\n      console.error('Error solving TSP', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Traveling Salesman Problem</h2>\n      {cities.map((city, index) => (\n        <div key={index}>\n          <input\n            type=\"number\"\n            name=\"x\"\n            placeholder=\"X-coordinate\"\n            value={city.x}\n            onChange={(event) => handleChange(index, event)}\n          />\n          <input\n            type=\"number\"\n            name=\"y\"\n            placeholder=\"Y-coordinate\"\n            value={city.y}\n            onChange={(event) => handleChange(index, event)}\n          />\n          <button onClick={() => handleRemoveCity(index)}>Remove City</button>\n        </div>\n      ))}\n      <button onClick={handleAddCity}>Add City</button>\n      <button onClick={handleSubmit}>Solve TSP</button>\n    </div>\n  );\n};\n\nexport default TSPComponent;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}