{"ast":null,"code":"import React,{useState}from'react';import ProblemSelection from'./components/ProblemSelection';import InputForm from'./components/InputForm';import ResultDisplay from'./components/ResultDisplay';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedProblem,setSelectedProblem]=useState('');const[result,setResult]=useState(null);const handleSelectProblem=problem=>{setSelectedProblem(problem);setResult(null);// Clear previous result when a new problem is selected\n};const handleSubmit=async formData=>{try{const response=await fetch(`https://combinatorics-solver.onrender.com/${selectedProblem}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();setResult(data);}catch(error){console.error('Error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Combinatorics Solver\"}),/*#__PURE__*/_jsx(ProblemSelection,{onSelectProblem:handleSelectProblem}),selectedProblem&&/*#__PURE__*/_jsx(InputForm,{problem:selectedProblem,onSubmit:handleSubmit}),result&&/*#__PURE__*/_jsx(ResultDisplay,{result:result})]});}export default App;","map":{"version":3,"names":["React","useState","ProblemSelection","InputForm","ResultDisplay","jsx","_jsx","jsxs","_jsxs","App","selectedProblem","setSelectedProblem","result","setResult","handleSelectProblem","problem","handleSubmit","formData","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","children","onSelectProblem","onSubmit"],"sources":["/combinatorics-solver/combinatorics-solver-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ProblemSelection from './components/ProblemSelection';\nimport InputForm from './components/InputForm';\nimport ResultDisplay from './components/ResultDisplay';\n\nfunction App() {\n  const [selectedProblem, setSelectedProblem] = useState('');\n  const [result, setResult] = useState(null);\n\n  const handleSelectProblem = (problem) => {\n    setSelectedProblem(problem);\n    setResult(null); // Clear previous result when a new problem is selected\n  };\n\n  const handleSubmit = async (formData) => {\n    try {\n      const response = await fetch(`https://combinatorics-solver.onrender.com/${selectedProblem}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await response.json();\n      setResult(data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Combinatorics Solver</h1>\n      <ProblemSelection onSelectProblem={handleSelectProblem} />\n      {selectedProblem && <InputForm problem={selectedProblem} onSubmit={handleSubmit} />}\n      {result && <ResultDisplay result={result} />}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,aAAa,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAa,mBAAmB,CAAIC,OAAO,EAAK,CACvCJ,kBAAkB,CAACI,OAAO,CAAC,CAC3BF,SAAS,CAAC,IAAI,CAAC,CAAE;AACnB,CAAC,CAED,KAAM,CAAAG,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACvC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6CAA6CT,eAAe,EAAE,CAAE,CAC3FU,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAC/B,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCb,SAAS,CAACY,IAAI,CAAC,CACjB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAChC,CACF,CAAC,CAED,mBACEnB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BvB,IAAA,CAACJ,gBAAgB,EAAC4B,eAAe,CAAEhB,mBAAoB,CAAE,CAAC,CACzDJ,eAAe,eAAIJ,IAAA,CAACH,SAAS,EAACY,OAAO,CAAEL,eAAgB,CAACqB,QAAQ,CAAEf,YAAa,CAAE,CAAC,CAClFJ,MAAM,eAAIN,IAAA,CAACF,aAAa,EAACQ,MAAM,CAAEA,MAAO,CAAE,CAAC,EACzC,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}