{"ast":null,"code":"var _jsxFileName = \"/combinatorics-solver/combinatorics-solver-frontend/src/components/PartitionsComponent.jsx\",\n  _s = $RefreshSig$();\n// PartitionsComponent.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PartitionsComponent = () => {\n  _s();\n  const [number, setNumber] = useState('');\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('https://combinatorics-solver.onrender.com/partitions', {\n        number: parseInt(number)\n      });\n      console.log('Partitions:', response.data.partitions);\n    } catch (error) {\n      console.error('Error solving Partitions problem', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Partitions Problem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Number\",\n      value: number,\n      onChange: e => setNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Solve Partitions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(PartitionsComponent, \"/S//3W9EisCdLYCOaRROAOn7cBc=\");\n_c = PartitionsComponent;\nexport default PartitionsComponent;\nvar _c;\n$RefreshReg$(_c, \"PartitionsComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PartitionsComponent","_s","number","setNumber","handleSubmit","response","post","parseInt","console","log","data","partitions","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/combinatorics-solver/combinatorics-solver-frontend/src/components/PartitionsComponent.jsx"],"sourcesContent":["// PartitionsComponent.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst PartitionsComponent = () => {\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('https://combinatorics-solver.onrender.com/partitions', { number: parseInt(number) });\n      console.log('Partitions:', response.data.partitions);\n    } catch (error) {\n      console.error('Error solving Partitions problem', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Partitions Problem</h2>\n      <input\n        type=\"number\"\n        placeholder=\"Number\"\n        value={number}\n        onChange={(e) => setNumber(e.target.value)}\n      />\n      <button onClick={handleSubmit}>Solve Partitions</button>\n    </div>\n  );\n};\n\nexport default PartitionsComponent;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,sDAAsD,EAAE;QAAEJ,MAAM,EAAEK,QAAQ,CAACL,MAAM;MAAE,CAAC,CAAC;MACvHM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,QAAQ,CAACK,IAAI,CAACC,UAAU,CAAC;IACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MACEmB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAElB,MAAO;MACdmB,QAAQ,EAAGC,CAAC,IAAKnB,SAAS,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAEpB,YAAa;MAAAS,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEV,CAAC;AAAChB,EAAA,CAxBID,mBAAmB;AAAAyB,EAAA,GAAnBzB,mBAAmB;AA0BzB,eAAeA,mBAAmB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}